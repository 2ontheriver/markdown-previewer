{"version":3,"sources":["components/Preview.js","components/Window.js","components/Editor.js","App.js","constants/index.js","reportWebVitals.js","index.js"],"names":["Preview","desc","icon","faEye","text","id","dangerouslySetInnerHTML","__html","this","props","markdown","React","Component","Window","state","maximized","handleMaximize","bind","setState","className","color","onClick","faWindowRestore","faWindowMaximize","size","children","Editor","faFileAlt","onChange","handleEditorChange","value","md","Remarkable","App","e","target","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yQAIMA,E,4JAEJ,WACE,OACE,cAAC,EAAD,CAAQC,KAAK,UAAUC,KAAMC,IAAOC,KAAK,UAAzC,SACE,qBAAKC,GAAG,UAAUC,wBAAyB,CAAEC,OAAQC,KAAKC,MAAMC,kB,GALlDC,IAAMC,WAYbZ,ICsBAa,E,kDA9Bb,WAAYJ,GAAQ,IAAD,8BACjB,gBACKK,MAAQ,CACXC,WAAW,GAEb,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALL,E,kDAQnB,WACET,KAAKU,UAAS,SAACJ,GACb,MAAO,CAAEC,WAAYD,EAAMC,gB,oBAI/B,WACE,OACE,sBAAKV,GAAIG,KAAKC,MAAMR,KAAO,aAAckB,UAAWX,KAAKM,MAAMC,UAAY,YAAc,GAAzF,UACE,sBAAKI,UAAU,YAAf,UACE,cAAC,IAAD,CAAiBjB,KAAMM,KAAKC,MAAMP,KAAMkB,MAAM,SADhD,IAC2DZ,KAAKC,MAAML,KACpE,sBAAMe,UAAU,cAAcE,QAASb,KAAKQ,eAA5C,SACE,cAAC,IAAD,CAAiBd,KAAMM,KAAKM,MAAMC,UAAYO,IAAkBC,IAAkBH,MAAM,OAAOI,KAAK,YAGvGhB,KAAKC,MAAMgB,gB,GAzBCd,IAAMC,WCFrBc,E,4JAEJ,WACE,OACE,cAAC,EAAD,CAAQzB,KAAK,SAASC,KAAMyB,IAAWvB,KAAK,SAA5C,SACE,0BAAUC,GAAG,SAASuB,SAAUpB,KAAKC,MAAMoB,mBAAoBC,MAAOtB,KAAKC,MAAMC,iB,GALpEC,IAAMC,WAYZc,ICVXK,EAAK,I,MAAIC,GAAW,CAAC,QAAW,IA+BrBC,E,kDA3Bb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXJ,SCbkB,0pCDepB,EAAKmB,mBAAqB,EAAKA,mBAAmBZ,KAAxB,gBALT,E,sDAQnB,SAAmBiB,GACjB1B,KAAKU,SAAS,CAACR,SAAUwB,EAAEC,OAAOL,U,oBAGpC,WAEE,OACE,qCACA,oBAAIzB,GAAG,aAAP,6CACA,sBAAKA,GAAG,YAAR,UACE,cAAC,EAAD,CAAQwB,mBAAoBrB,KAAKqB,mBAAoBnB,SAAUF,KAAKM,MAAMJ,WAC1E,cAAC,EAAD,CAASA,SAAUqB,EAAGK,OAAO5B,KAAKM,MAAMJ,sB,GArB9BC,IAAMC,WEITyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.087904d7.chunk.js","sourcesContent":["import React from 'react';\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport Window from './Window.js';\n\nclass Preview extends React.Component {\n\n  render() {\n    return (\n      <Window desc=\"preview\" icon={faEye} text=\"Preview\">\n        <div id=\"preview\" dangerouslySetInnerHTML={{ __html: this.props.markdown }} />\n      </Window>\n    );\n  }\n\n}\n\nexport default Preview;\n","import React from 'react';\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { faWindowMaximize, faWindowRestore } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Preview from './Preview.js';\n\nclass Window extends React.Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      maximized: false\n    }\n    this.handleMaximize = this.handleMaximize.bind(this);\n  }\n\n  handleMaximize() {\n    this.setState((state) => {\n      return { maximized: !state.maximized };\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.desc + '-container'} className={this.state.maximized ? 'maximized' : ''}>\n        <div className=\"title-bar\">\n          <FontAwesomeIcon icon={this.props.icon} color=\"#fff\" /> {this.props.text}\n          <span className=\"window-icon\" onClick={this.handleMaximize}>\n            <FontAwesomeIcon icon={this.state.maximized ? faWindowRestore : faWindowMaximize} color=\"#000\" size=\"sm\" />\n          </span>\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n\n}\n\nexport default Window;\n","import React from 'react';\nimport { faFileAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Window from './Window.js';\n\nclass Editor extends React.Component {\n\n  render() {\n    return (\n      <Window desc=\"editor\" icon={faFileAlt} text=\"Editor\">\n        <textarea id=\"editor\" onChange={this.props.handleEditorChange} value={this.props.markdown} />\n      </Window>\n    );\n  }\n\n}\n\nexport default Editor;\n","import * as Constants from './constants/index.js';\nimport React from 'react';\nimport Editor from './components/Editor.js';\nimport Preview from './components/Preview.js';\nimport { Remarkable } from 'remarkable';\n\nvar md = new Remarkable({'breaks' : true});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: Constants.placeholder\n    };\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n  }\n\n  handleEditorChange(e){\n    this.setState({markdown: e.target.value});\n  }\n\n  render() {\n    /* <Editor handleEditorChange={this.handleEditorChange} markdown={this.state.markdown} /> */\n    return (\n      <>\n      <h1 id=\"page-title\">Simple React Markdown Previewer</h1>\n      <div id=\"container\">\n        <Editor handleEditorChange={this.handleEditorChange} markdown={this.state.markdown} />\n        <Preview markdown={md.render(this.state.markdown)} />\n      </div>\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","export const placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}