{"version":3,"sources":["components/Window.js","components/Editor.js","components/Preview.js","App.js","constants/index.js","index.js"],"names":["Window","props","state","maximized","handleMaximize","bind","this","setState","id","desc","className","icon","color","text","onClick","faWindowRestore","faWindowMaximize","size","children","React","Component","Editor","faFileAlt","onChange","handleEditorChange","value","markdown","Preview","faEye","dangerouslySetInnerHTML","__html","md","Remarkable","breaks","App","e","target","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"yQA6CeA,E,kDArCb,WAAYC,GAAQ,IAAD,8BACjB,gBACKC,MAAQ,CACXC,WAAW,GAEb,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALL,E,kDAQnB,WACEC,KAAKC,UAAS,SAACL,GACb,MAAO,CAAEC,WAAYD,EAAMC,gB,oBAI/B,WACE,OACE,sBACEK,GAAIF,KAAKL,MAAMQ,KAAO,aACtBC,UAAWJ,KAAKJ,MAAMC,UAAY,YAAc,GAFlD,UAIE,sBAAKO,UAAU,YAAf,UACE,cAAC,IAAD,CAAiBC,KAAML,KAAKL,MAAMU,KAAMC,MAAM,SAAU,IACvDN,KAAKL,MAAMY,KACZ,sBAAMH,UAAU,cAAcI,QAASR,KAAKF,eAA5C,SACE,cAAC,IAAD,CACEO,KAAML,KAAKJ,MAAMC,UAAYY,IAAkBC,IAC/CJ,MAAM,OACNK,KAAK,YAIVX,KAAKL,MAAMiB,gB,GAhCCC,IAAMC,WCHrBC,E,4JAEJ,WACE,OACE,cAAC,EAAD,CAAQZ,KAAK,SAASE,KAAMW,IAAWT,KAAK,SAA5C,SACE,0BAAUL,GAAG,SAASe,SAAUjB,KAAKL,MAAMuB,mBAAoBC,MAAOnB,KAAKL,MAAMyB,iB,GALpEP,IAAMC,WAYZC,ICZTM,E,4JAEJ,WACE,OACE,cAAC,EAAD,CAAQlB,KAAK,UAAUE,KAAMiB,IAAOf,KAAK,UAAzC,SACE,qBAAKL,GAAG,UAAUqB,wBAAyB,CAAEC,OAAQxB,KAAKL,MAAMyB,kB,GALlDP,IAAMC,WAYbO,ICVXI,EAAK,I,MAAIC,GAAW,CAAEC,QAAQ,IAgCnBC,E,kDA7Bb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXwB,SCZkB,ygDDcpB,EAAKF,mBAAqB,EAAKA,mBAAmBnB,KAAxB,gBALT,E,sDAQnB,SAAmB8B,GACjB7B,KAAKC,SAAS,CAAEmB,SAAUS,EAAEC,OAAOX,U,oBAGrC,WACE,OACE,qCACE,oBAAIjB,GAAG,aAAP,gCACA,mBAAGA,GAAG,WAAN,6DACA,sBAAKA,GAAG,YAAR,UACE,cAAC,EAAD,CACEgB,mBAAoBlB,KAAKkB,mBACzBE,SAAUpB,KAAKJ,MAAMwB,WAEvB,cAAC,EAAD,CAASA,SAAUK,EAAGM,OAAO/B,KAAKJ,MAAMwB,sB,GAvBhCP,IAAMC,WEHxBkB,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.974b8b75.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  faWindowMaximize,\n  faWindowRestore,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Window extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      maximized: false,\n    };\n    this.handleMaximize = this.handleMaximize.bind(this);\n  }\n\n  handleMaximize() {\n    this.setState((state) => {\n      return { maximized: !state.maximized };\n    });\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.desc + \"-container\"}\n        className={this.state.maximized ? \"maximized\" : \"\"}\n      >\n        <div className=\"title-bar\">\n          <FontAwesomeIcon icon={this.props.icon} color=\"#fff\" />{\" \"}\n          {this.props.text}\n          <span className=\"window-icon\" onClick={this.handleMaximize}>\n            <FontAwesomeIcon\n              icon={this.state.maximized ? faWindowRestore : faWindowMaximize}\n              color=\"#000\"\n              size=\"sm\"\n            />\n          </span>\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Window;\n","import React from 'react';\nimport { faFileAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Window from './Window.js';\n\nclass Editor extends React.Component {\n\n  render() {\n    return (\n      <Window desc=\"editor\" icon={faFileAlt} text=\"Editor\">\n        <textarea id=\"editor\" onChange={this.props.handleEditorChange} value={this.props.markdown} />\n      </Window>\n    );\n  }\n\n}\n\nexport default Editor;\n","import React from 'react';\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport Window from './Window.js';\n\nclass Preview extends React.Component {\n\n  render() {\n    return (\n      <Window desc=\"preview\" icon={faEye} text=\"Preview\">\n        <div id=\"preview\" dangerouslySetInnerHTML={{ __html: this.props.markdown }} />\n      </Window>\n    );\n  }\n\n}\n\nexport default Preview;\n","import * as Constants from \"./constants/index.js\";\nimport React from \"react\";\nimport Editor from \"./components/Editor.js\";\nimport Preview from \"./components/Preview.js\";\nimport { Remarkable } from \"remarkable\";\n\nvar md = new Remarkable({ breaks: true });\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: Constants.placeholder,\n    };\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n  }\n\n  handleEditorChange(e) {\n    this.setState({ markdown: e.target.value });\n  }\n\n  render() {\n    return (\n      <>\n        <h1 id=\"page-title\">Markdown Previewer</h1>\n        <p id=\"tag-line\">Enter Markdown in the editor to convert to HTML</p>\n        <div id=\"container\">\n          <Editor\n            handleEditorChange={this.handleEditorChange}\n            markdown={this.state.markdown}\n          />\n          <Preview markdown={md.render(this.state.markdown)} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","export const placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\nfor (let i = 0; i < cars.length; i++) {\n  text += cars[i] + \"<br>\";\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\nLots more text\n\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}